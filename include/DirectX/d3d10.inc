.pragma list(push, 0)
ifndef __REQUIRED_RPCNDR_H_VERSION__
define __REQUIRED_RPCNDR_H_VERSION__ 500
endif
ifndef __REQUIRED_RPCSAL_H_VERSION__
define __REQUIRED_RPCSAL_H_VERSION__ 100
endif

include rpc.inc
include rpcndr.inc
ifndef __RPCNDR_H_VERSION__
.err <this stub requires an updated version of rpcndr.inc>
endif

ifndef COM_NO_WINDOWS_H
include windows.inc
include ole2.inc
endif

ifndef __d3d10_h__
define __d3d10_h__

include oaidl.inc
include ocidl.inc
include dxgi.inc

ifndef _D3D10_CONSTANTS
define _D3D10_CONSTANTS
D3D10_16BIT_INDEX_STRIP_CUT_VALUE equ ( 0xffff )
D3D10_32BIT_INDEX_STRIP_CUT_VALUE equ ( 0xffffffff )
D3D10_8BIT_INDEX_STRIP_CUT_VALUE equ ( 0xff )
D3D10_ARRAY_AXIS_ADDRESS_RANGE_BIT_COUNT equ ( 9 )
D3D10_CLIP_OR_CULL_DISTANCE_COUNT equ ( 8 )
D3D10_CLIP_OR_CULL_DISTANCE_ELEMENT_COUNT equ ( 2 )
D3D10_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT equ ( 14 )
D3D10_COMMONSHADER_CONSTANT_BUFFER_COMPONENTS equ ( 4 )
D3D10_COMMONSHADER_CONSTANT_BUFFER_COMPONENT_BIT_COUNT equ ( 32 )
D3D10_COMMONSHADER_CONSTANT_BUFFER_HW_SLOT_COUNT equ ( 15 )
D3D10_COMMONSHADER_CONSTANT_BUFFER_REGISTER_COMPONENTS equ ( 4 )
D3D10_COMMONSHADER_CONSTANT_BUFFER_REGISTER_COUNT equ ( 15 )
D3D10_COMMONSHADER_CONSTANT_BUFFER_REGISTER_READS_PER_INST equ ( 1 )
D3D10_COMMONSHADER_CONSTANT_BUFFER_REGISTER_READ_PORTS equ ( 1 )
D3D10_COMMONSHADER_FLOWCONTROL_NESTING_LIMIT equ ( 64 )
D3D10_COMMONSHADER_IMMEDIATE_CONSTANT_BUFFER_REGISTER_COMPONENTS equ ( 4 )
D3D10_COMMONSHADER_IMMEDIATE_CONSTANT_BUFFER_REGISTER_COUNT equ ( 1 )
D3D10_COMMONSHADER_IMMEDIATE_CONSTANT_BUFFER_REGISTER_READS_PER_INST equ ( 1 )
D3D10_COMMONSHADER_IMMEDIATE_CONSTANT_BUFFER_REGISTER_READ_PORTS equ ( 1 )
D3D10_COMMONSHADER_IMMEDIATE_VALUE_COMPONENT_BIT_COUNT equ ( 32 )
D3D10_COMMONSHADER_INPUT_RESOURCE_REGISTER_COMPONENTS equ ( 1 )
D3D10_COMMONSHADER_INPUT_RESOURCE_REGISTER_COUNT equ ( 128 )
D3D10_COMMONSHADER_INPUT_RESOURCE_REGISTER_READS_PER_INST equ ( 1 )
D3D10_COMMONSHADER_INPUT_RESOURCE_REGISTER_READ_PORTS equ ( 1 )
D3D10_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT equ ( 128 )
D3D10_COMMONSHADER_SAMPLER_REGISTER_COMPONENTS equ ( 1 )
D3D10_COMMONSHADER_SAMPLER_REGISTER_COUNT equ ( 16 )
D3D10_COMMONSHADER_SAMPLER_REGISTER_READS_PER_INST equ ( 1 )
D3D10_COMMONSHADER_SAMPLER_REGISTER_READ_PORTS equ ( 1 )
D3D10_COMMONSHADER_SAMPLER_SLOT_COUNT equ ( 16 )
D3D10_COMMONSHADER_SUBROUTINE_NESTING_LIMIT equ ( 32 )
D3D10_COMMONSHADER_TEMP_REGISTER_COMPONENTS equ ( 4 )
D3D10_COMMONSHADER_TEMP_REGISTER_COMPONENT_BIT_COUNT equ ( 32 )
D3D10_COMMONSHADER_TEMP_REGISTER_COUNT equ ( 4096 )
D3D10_COMMONSHADER_TEMP_REGISTER_READS_PER_INST equ ( 3 )
D3D10_COMMONSHADER_TEMP_REGISTER_READ_PORTS equ ( 3 )
D3D10_COMMONSHADER_TEXCOORD_RANGE_REDUCTION_MAX equ ( 10 )
D3D10_COMMONSHADER_TEXCOORD_RANGE_REDUCTION_MIN equ ( -10 )
D3D10_COMMONSHADER_TEXEL_OFFSET_MAX_NEGATIVE equ ( -8 )
D3D10_COMMONSHADER_TEXEL_OFFSET_MAX_POSITIVE equ ( 7 )

D3D10_DEFAULT_BLEND_FACTOR_ALPHA equ ( 1.0f )
D3D10_DEFAULT_BLEND_FACTOR_BLUE equ ( 1.0f )
D3D10_DEFAULT_BLEND_FACTOR_GREEN equ ( 1.0f )
D3D10_DEFAULT_BLEND_FACTOR_RED equ ( 1.0f )
D3D10_DEFAULT_BORDER_COLOR_COMPONENT equ ( 0.0f )
D3D10_DEFAULT_DEPTH_BIAS equ ( 0 )

D3D10_DEFAULT_DEPTH_BIAS_CLAMP equ ( 0.0f )
D3D10_DEFAULT_MAX_ANISOTROPY equ ( 16.0f )
D3D10_DEFAULT_MIP_LOD_BIAS equ ( 0.0f )
D3D10_DEFAULT_RENDER_TARGET_ARRAY_INDEX equ ( 0 )

D3D10_DEFAULT_SAMPLE_MASK equ ( 0xffffffff )
D3D10_DEFAULT_SCISSOR_ENDX equ ( 0 )
D3D10_DEFAULT_SCISSOR_ENDY equ ( 0 )
D3D10_DEFAULT_SCISSOR_STARTX equ ( 0 )
D3D10_DEFAULT_SCISSOR_STARTY equ ( 0 )
D3D10_DEFAULT_SLOPE_SCALED_DEPTH_BIAS equ ( 0.0f )
D3D10_DEFAULT_STENCIL_READ_MASK equ ( 0xff )

D3D10_DEFAULT_STENCIL_REFERENCE equ ( 0 )
D3D10_DEFAULT_STENCIL_WRITE_MASK equ ( 0xff )
D3D10_DEFAULT_VIEWPORT_AND_SCISSORRECT_INDEX equ ( 0 )
D3D10_DEFAULT_VIEWPORT_HEIGHT equ ( 0 )

D3D10_DEFAULT_VIEWPORT_MAX_DEPTH equ ( 0.0f )
D3D10_DEFAULT_VIEWPORT_MIN_DEPTH equ ( 0.0f )
D3D10_DEFAULT_VIEWPORT_TOPLEFTX equ ( 0 )

D3D10_DEFAULT_VIEWPORT_TOPLEFTY equ ( 0 )
D3D10_DEFAULT_VIEWPORT_WIDTH equ ( 0 )

D3D10_FLOAT16_FUSED_TOLERANCE_IN_ULP equ ( 0.6 )
D3D10_FLOAT32_MAX	equ ( 3.402823466e+38f )
D3D10_FLOAT32_TO_INTEGER_TOLERANCE_IN_ULP equ ( 0.6f )
D3D10_FLOAT_TO_SRGB_EXPONENT_DENOMINATOR equ ( 2.4f )
D3D10_FLOAT_TO_SRGB_EXPONENT_NUMERATOR equ ( 1.0f )
D3D10_FLOAT_TO_SRGB_OFFSET equ ( 0.055f )
D3D10_FLOAT_TO_SRGB_SCALE_1 equ ( 12.92f )
D3D10_FLOAT_TO_SRGB_SCALE_2 equ ( 1.055f )
D3D10_FLOAT_TO_SRGB_THRESHOLD equ ( 0.0031308f )
D3D10_FTOI_INSTRUCTION_MAX_INPUT equ ( 2147483647.999f )
D3D10_FTOI_INSTRUCTION_MIN_INPUT equ ( -2147483648.999f )
D3D10_FTOU_INSTRUCTION_MAX_INPUT equ ( 4294967295.999f )
D3D10_FTOU_INSTRUCTION_MIN_INPUT equ ( 0.0f )
D3D10_GS_INPUT_PRIM_CONST_REGISTER_COMPONENTS equ ( 1 )

D3D10_GS_INPUT_PRIM_CONST_REGISTER_COMPONENT_BIT_COUNT equ ( 32 )
D3D10_GS_INPUT_PRIM_CONST_REGISTER_COUNT equ ( 1 )
D3D10_GS_INPUT_PRIM_CONST_REGISTER_READS_PER_INST equ ( 2 )
D3D10_GS_INPUT_PRIM_CONST_REGISTER_READ_PORTS equ ( 1 )
D3D10_GS_INPUT_REGISTER_COMPONENTS equ ( 4 )
D3D10_GS_INPUT_REGISTER_COMPONENT_BIT_COUNT equ ( 32 )
D3D10_GS_INPUT_REGISTER_COUNT equ ( 16 )
D3D10_GS_INPUT_REGISTER_READS_PER_INST equ ( 2 )
D3D10_GS_INPUT_REGISTER_READ_PORTS equ ( 1 )
D3D10_GS_INPUT_REGISTER_VERTICES equ ( 6 )
D3D10_GS_OUTPUT_ELEMENTS equ ( 32 )
D3D10_GS_OUTPUT_REGISTER_COMPONENTS equ ( 4 )
D3D10_GS_OUTPUT_REGISTER_COMPONENT_BIT_COUNT equ ( 32 )
D3D10_GS_OUTPUT_REGISTER_COUNT equ ( 32 )
D3D10_IA_DEFAULT_INDEX_BUFFER_OFFSET_IN_BYTES equ ( 0 )
D3D10_IA_DEFAULT_PRIMITIVE_TOPOLOGY equ ( 0 )
D3D10_IA_DEFAULT_VERTEX_BUFFER_OFFSET_IN_BYTES equ ( 0 )
D3D10_IA_INDEX_INPUT_RESOURCE_SLOT_COUNT equ ( 1 )
D3D10_IA_INSTANCE_ID_BIT_COUNT equ ( 32 )
D3D10_IA_INTEGER_ARITHMETIC_BIT_COUNT equ ( 32 )
D3D10_IA_PRIMITIVE_ID_BIT_COUNT equ ( 32 )
D3D10_IA_VERTEX_ID_BIT_COUNT equ ( 32 )
D3D10_IA_VERTEX_INPUT_RESOURCE_SLOT_COUNT equ ( 16 )
D3D10_IA_VERTEX_INPUT_STRUCTURE_ELEMENTS_COMPONENTS equ ( 64 )
D3D10_IA_VERTEX_INPUT_STRUCTURE_ELEMENT_COUNT equ ( 16 )
D3D10_INTEGER_DIVIDE_BY_ZERO_QUOTIENT equ ( 0xffffffff )
D3D10_INTEGER_DIVIDE_BY_ZERO_REMAINDER equ ( 0xffffffff )

D3D10_LINEAR_GAMMA	equ ( 1.0f )
D3D10_MAX_BORDER_COLOR_COMPONENT equ ( 1.0f )
D3D10_MAX_DEPTH		equ ( 1.0f )
D3D10_MAX_MAXANISOTROPY equ ( 16 )

D3D10_MAX_MULTISAMPLE_SAMPLE_COUNT equ ( 32 )
D3D10_MAX_POSITION_VALUE equ ( 3.402823466e+34f )
D3D10_MAX_TEXTURE_DIMENSION_2_TO_EXP equ ( 17 )

D3D10_MIN_BORDER_COLOR_COMPONENT equ ( 0.0f )
D3D10_MIN_DEPTH		equ ( 0.0f )
D3D10_MIN_MAXANISOTROPY equ ( 0 )

D3D10_MIP_LOD_BIAS_MAX	equ ( 15.99f )
D3D10_MIP_LOD_BIAS_MIN	equ ( -16.0f )
D3D10_MIP_LOD_FRACTIONAL_BIT_COUNT equ ( 6 )

D3D10_MIP_LOD_RANGE_BIT_COUNT equ ( 8 )

D3D10_MULTISAMPLE_ANTIALIAS_LINE_WIDTH equ ( 1.4f )
D3D10_NONSAMPLE_FETCH_OUT_OF_RANGE_ACCESS_RESULT equ ( 0 )

D3D10_PIXEL_ADDRESS_RANGE_BIT_COUNT equ ( 13 )
D3D10_PRE_SCISSOR_PIXEL_ADDRESS_RANGE_BIT_COUNT equ ( 15 )
D3D10_PS_FRONTFACING_DEFAULT_VALUE equ ( 0xffffffff )
D3D10_PS_FRONTFACING_FALSE_VALUE equ ( 0 )
D3D10_PS_FRONTFACING_TRUE_VALUE equ ( 0xffffffff )
D3D10_PS_INPUT_REGISTER_COMPONENTS equ ( 4 )
D3D10_PS_INPUT_REGISTER_COMPONENT_BIT_COUNT equ ( 32 )
D3D10_PS_INPUT_REGISTER_COUNT equ ( 32 )
D3D10_PS_INPUT_REGISTER_READS_PER_INST equ ( 2 )
D3D10_PS_INPUT_REGISTER_READ_PORTS equ ( 1 )
D3D10_PS_LEGACY_PIXEL_CENTER_FRACTIONAL_COMPONENT equ ( 0.0f )
D3D10_PS_OUTPUT_DEPTH_REGISTER_COMPONENTS equ ( 1 )
D3D10_PS_OUTPUT_DEPTH_REGISTER_COMPONENT_BIT_COUNT equ ( 32 )
D3D10_PS_OUTPUT_DEPTH_REGISTER_COUNT equ ( 1 )
D3D10_PS_OUTPUT_REGISTER_COMPONENTS equ ( 4 )
D3D10_PS_OUTPUT_REGISTER_COMPONENT_BIT_COUNT equ ( 32 )
D3D10_PS_OUTPUT_REGISTER_COUNT equ ( 8 )
D3D10_PS_PIXEL_CENTER_FRACTIONAL_COMPONENT equ ( 0.5f )
D3D10_REQ_BLEND_OBJECT_COUNT_PER_CONTEXT equ ( 4096 )
D3D10_REQ_BUFFER_RESOURCE_TEXEL_COUNT_2_TO_EXP equ ( 27 )
D3D10_REQ_CONSTANT_BUFFER_ELEMENT_COUNT equ ( 4096 )
D3D10_REQ_DEPTH_STENCIL_OBJECT_COUNT_PER_CONTEXT equ ( 4096 )
D3D10_REQ_DRAWINDEXED_INDEX_COUNT_2_TO_EXP equ ( 32 )
D3D10_REQ_DRAW_VERTEX_COUNT_2_TO_EXP equ ( 32 )
D3D10_REQ_FILTERING_HW_ADDRESSABLE_RESOURCE_DIMENSION equ ( 8192 )
D3D10_REQ_GS_INVOCATION_32BIT_OUTPUT_COMPONENT_LIMIT equ ( 1024 )
D3D10_REQ_IMMEDIATE_CONSTANT_BUFFER_ELEMENT_COUNT equ ( 4096 )
D3D10_REQ_MAXANISOTROPY equ ( 16 )
D3D10_REQ_MIP_LEVELS	equ ( 14 )
D3D10_REQ_MULTI_ELEMENT_STRUCTURE_SIZE_IN_BYTES equ ( 2048 )
D3D10_REQ_RASTERIZER_OBJECT_COUNT_PER_CONTEXT equ ( 4096 )
D3D10_REQ_RENDER_TO_BUFFER_WINDOW_WIDTH equ ( 8192 )
D3D10_REQ_RESOURCE_SIZE_IN_MEGABYTES equ ( 128 )
D3D10_REQ_RESOURCE_VIEW_COUNT_PER_CONTEXT_2_TO_EXP equ ( 20 )
D3D10_REQ_SAMPLER_OBJECT_COUNT_PER_CONTEXT equ ( 4096 )
D3D10_REQ_TEXTURE1D_ARRAY_AXIS_DIMENSION equ ( 512 )
D3D10_REQ_TEXTURE1D_U_DIMENSION equ ( 8192 )
D3D10_REQ_TEXTURE2D_ARRAY_AXIS_DIMENSION equ ( 512 )
D3D10_REQ_TEXTURE2D_U_OR_V_DIMENSION equ ( 8192 )
D3D10_REQ_TEXTURE3D_U_V_OR_W_DIMENSION equ ( 2048 )
D3D10_REQ_TEXTURECUBE_DIMENSION equ ( 8192 )
D3D10_RESINFO_INSTRUCTION_MISSING_COMPONENT_RETVAL equ ( 0 )
D3D10_SHADER_MAJOR_VERSION equ ( 4 )
D3D10_SHADER_MINOR_VERSION equ ( 0 )
D3D10_SHIFT_INSTRUCTION_PAD_VALUE equ ( 0 )
D3D10_SHIFT_INSTRUCTION_SHIFT_VALUE_BIT_COUNT equ ( 5 )
D3D10_SIMULTANEOUS_RENDER_TARGET_COUNT equ ( 8 )
D3D10_SO_BUFFER_MAX_STRIDE_IN_BYTES equ ( 2048 )
D3D10_SO_BUFFER_MAX_WRITE_WINDOW_IN_BYTES equ ( 256 )
D3D10_SO_BUFFER_SLOT_COUNT equ ( 4 )
D3D10_SO_DDI_REGISTER_INDEX_DENOTING_GAP equ ( 0xffffffff )
D3D10_SO_MULTIPLE_BUFFER_ELEMENTS_PER_BUFFER equ ( 1 )
D3D10_SO_SINGLE_BUFFER_COMPONENT_LIMIT equ ( 64 )

D3D10_SRGB_GAMMA	equ ( 2.2f )
D3D10_SRGB_TO_FLOAT_DENOMINATOR_1 equ ( 12.92f )
D3D10_SRGB_TO_FLOAT_DENOMINATOR_2 equ ( 1.055f )
D3D10_SRGB_TO_FLOAT_EXPONENT equ ( 2.4f )
D3D10_SRGB_TO_FLOAT_OFFSET equ ( 0.055f )
D3D10_SRGB_TO_FLOAT_THRESHOLD equ ( 0.04045f )
D3D10_SRGB_TO_FLOAT_TOLERANCE_IN_ULP equ ( 0.5f )
D3D10_STANDARD_COMPONENT_BIT_COUNT equ ( 32 )

D3D10_STANDARD_COMPONENT_BIT_COUNT_DOUBLED equ ( 64 )
D3D10_STANDARD_MAXIMUM_ELEMENT_ALIGNMENT_BYTE_MULTIPLE equ ( 4 )
D3D10_STANDARD_PIXEL_COMPONENT_COUNT equ ( 128 )
D3D10_STANDARD_PIXEL_ELEMENT_COUNT equ ( 32 )
D3D10_STANDARD_VECTOR_SIZE equ ( 4 )
D3D10_STANDARD_VERTEX_ELEMENT_COUNT equ ( 16 )
D3D10_STANDARD_VERTEX_TOTAL_COMPONENT_COUNT equ ( 64 )
D3D10_SUBPIXEL_FRACTIONAL_BIT_COUNT equ ( 8 )
D3D10_SUBTEXEL_FRACTIONAL_BIT_COUNT equ ( 6 )
D3D10_TEXEL_ADDRESS_RANGE_BIT_COUNT equ ( 18 )
D3D10_UNBOUND_MEMORY_ACCESS_RESULT equ ( 0 )
D3D10_VIEWPORT_AND_SCISSORRECT_MAX_INDEX equ ( 15 )
D3D10_VIEWPORT_AND_SCISSORRECT_OBJECT_COUNT_PER_PIPELINE equ ( 16 )
D3D10_VIEWPORT_BOUNDS_MAX equ ( 16383 )
D3D10_VIEWPORT_BOUNDS_MIN equ ( -16384 )
D3D10_VS_INPUT_REGISTER_COMPONENTS equ ( 4 )
D3D10_VS_INPUT_REGISTER_COMPONENT_BIT_COUNT equ ( 32 )
D3D10_VS_INPUT_REGISTER_COUNT equ ( 16 )
D3D10_VS_INPUT_REGISTER_READS_PER_INST equ ( 2 )
D3D10_VS_INPUT_REGISTER_READ_PORTS equ ( 1 )
D3D10_VS_OUTPUT_REGISTER_COMPONENTS equ ( 4 )
D3D10_VS_OUTPUT_REGISTER_COMPONENT_BIT_COUNT equ ( 32 )
D3D10_VS_OUTPUT_REGISTER_COUNT equ ( 16 )
D3D10_WHQL_CONTEXT_COUNT_FOR_RESOURCE_LIMIT equ ( 10 )
D3D10_WHQL_DRAWINDEXED_INDEX_COUNT_2_TO_EXP equ ( 25 )
D3D10_WHQL_DRAW_VERTEX_COUNT_2_TO_EXP equ ( 25 )

D3D_MAJOR_VERSION	equ ( 10 )
D3D_MINOR_VERSION	equ ( 0 )
D3D_SPEC_DATE_DAY	equ ( 8 )
D3D_SPEC_DATE_MONTH	equ ( 8 )
D3D_SPEC_DATE_YEAR	equ ( 2006 )
D3D_SPEC_VERSION	equ ( 1.050005 )
endif

define D3D10_ERROR_TOO_MANY_UNIQUE_STATE_OBJECTS 0x88790001
define D3D10_ERROR_FILE_NOT_FOUND	0x88790002

D3D10_INPUT_CLASSIFICATION typedef SDWORD
D3D10_INPUT_PER_VERTEX_DATA equ 0
D3D10_INPUT_PER_INSTANCE_DATA equ 1

D3D10_APPEND_ALIGNED_ELEMENT equ 0xffffffff

D3D10_INPUT_ELEMENT_DESC STRUC
SemanticName		LPCSTR ?
SemanticIndex		UINT ?
Format			DXGI_FORMAT ?
InputSlot		UINT ?
AlignedByteOffset	UINT ?
InputSlotClass		D3D10_INPUT_CLASSIFICATION ?
InstanceDataStepRate	UINT ?
D3D10_INPUT_ELEMENT_DESC ENDS

D3D10_FILL_MODE		typedef SDWORD
D3D10_FILL_WIREFRAME	equ 2
D3D10_FILL_SOLID	equ 3

D3D10_PRIMITIVE_TOPOLOGY typedef SDWORD
D3D10_PRIMITIVE_TOPOLOGY_UNDEFINED equ 0
D3D10_PRIMITIVE_TOPOLOGY_POINTLIST equ 1
D3D10_PRIMITIVE_TOPOLOGY_LINELIST equ 2
D3D10_PRIMITIVE_TOPOLOGY_LINESTRIP equ 3
D3D10_PRIMITIVE_TOPOLOGY_TRIANGLELIST equ 4
D3D10_PRIMITIVE_TOPOLOGY_TRIANGLESTRIP equ 5
D3D10_PRIMITIVE_TOPOLOGY_LINELIST_ADJ equ 10
D3D10_PRIMITIVE_TOPOLOGY_LINESTRIP_ADJ equ 11
D3D10_PRIMITIVE_TOPOLOGY_TRIANGLELIST_ADJ equ 12
D3D10_PRIMITIVE_TOPOLOGY_TRIANGLESTRIP_ADJ equ 13

D3D10_PRIMITIVE		typedef SDWORD
D3D10_PRIMITIVE_UNDEFINED equ 0
D3D10_PRIMITIVE_POINT	equ 1
D3D10_PRIMITIVE_LINE	equ 2
D3D10_PRIMITIVE_TRIANGLE equ 3
D3D10_PRIMITIVE_LINE_ADJ equ 6
D3D10_PRIMITIVE_TRIANGLE_ADJ equ 7

D3D10_CULL_MODE		typedef SDWORD
D3D10_CULL_NONE		equ 1
D3D10_CULL_FRONT	equ 2
D3D10_CULL_BACK		equ 3

D3D10_SO_DECLARATION_ENTRY STRUC
SemanticName		LPCSTR ?
SemanticIndex		UINT ?
StartComponent		db ?
ComponentCount		db ?
OutputSlot		db ?
D3D10_SO_DECLARATION_ENTRY ENDS

D3D10_VIEWPORT		STRUC
TopLeftX		SINT ?
TopLeftY		SINT ?
Width			UINT ?
Height			UINT ?
MinDepth		FLOAT ?
MaxDepth		FLOAT ?
D3D10_VIEWPORT		ENDS

D3D10_RESOURCE_DIMENSION typedef SDWORD
D3D10_RESOURCE_DIMENSION_UNKNOWN equ 0
D3D10_RESOURCE_DIMENSION_BUFFER equ 1
D3D10_RESOURCE_DIMENSION_TEXTURE1D equ 2
D3D10_RESOURCE_DIMENSION_TEXTURE2D equ 3
D3D10_RESOURCE_DIMENSION_TEXTURE3D equ 4

D3D10_SRV_DIMENSION	typedef SDWORD
D3D10_SRV_DIMENSION_UNKNOWN equ 0
D3D10_SRV_DIMENSION_BUFFER equ 1
D3D10_SRV_DIMENSION_TEXTURE1D equ 2
D3D10_SRV_DIMENSION_TEXTURE1DARRAY equ 3
D3D10_SRV_DIMENSION_TEXTURE2D equ 4
D3D10_SRV_DIMENSION_TEXTURE2DARRAY equ 5
D3D10_SRV_DIMENSION_TEXTURE2DMS equ 6
D3D10_SRV_DIMENSION_TEXTURE2DMSARRAY equ 7
D3D10_SRV_DIMENSION_TEXTURE3D equ 8
D3D10_SRV_DIMENSION_TEXTURECUBE equ 9

D3D10_DSV_DIMENSION	typedef SDWORD
D3D10_DSV_DIMENSION_UNKNOWN equ 0
D3D10_DSV_DIMENSION_TEXTURE1D equ 1
D3D10_DSV_DIMENSION_TEXTURE1DARRAY equ 2
D3D10_DSV_DIMENSION_TEXTURE2D equ 3
D3D10_DSV_DIMENSION_TEXTURE2DARRAY equ 4
D3D10_DSV_DIMENSION_TEXTURE2DMS equ 5
D3D10_DSV_DIMENSION_TEXTURE2DMSARRAY equ 6

D3D10_RTV_DIMENSION	typedef SDWORD
D3D10_RTV_DIMENSION_UNKNOWN equ 0
D3D10_RTV_DIMENSION_BUFFER equ 1
D3D10_RTV_DIMENSION_TEXTURE1D equ 2
D3D10_RTV_DIMENSION_TEXTURE1DARRAY equ 3
D3D10_RTV_DIMENSION_TEXTURE2D equ 4
D3D10_RTV_DIMENSION_TEXTURE2DARRAY equ 5
D3D10_RTV_DIMENSION_TEXTURE2DMS equ 6
D3D10_RTV_DIMENSION_TEXTURE2DMSARRAY equ 7
D3D10_RTV_DIMENSION_TEXTURE3D equ 8

D3D10_USAGE		typedef SDWORD
D3D10_USAGE_DEFAULT	equ 0
D3D10_USAGE_IMMUTABLE	equ 1
D3D10_USAGE_DYNAMIC	equ 2
D3D10_USAGE_STAGING	equ 3

D3D10_BIND_FLAG		typedef SDWORD
D3D10_BIND_VERTEX_BUFFER equ 0x1
D3D10_BIND_INDEX_BUFFER equ 0x2
D3D10_BIND_CONSTANT_BUFFER equ 0x4
D3D10_BIND_SHADER_RESOURCE equ 0x8
D3D10_BIND_STREAM_OUTPUT equ 0x10
D3D10_BIND_RENDER_TARGET equ 0x20
D3D10_BIND_DEPTH_STENCIL equ 0x40

D3D10_CPU_ACCESS_FLAG	typedef SDWORD
D3D10_CPU_ACCESS_WRITE	equ 0x10000
D3D10_CPU_ACCESS_READ	equ 0x20000

D3D10_RESOURCE_MISC_FLAG typedef SDWORD
D3D10_RESOURCE_MISC_GENERATE_MIPS equ 0x1
D3D10_RESOURCE_MISC_SHARED equ 0x2
D3D10_RESOURCE_MISC_TEXTURECUBE equ 0x4
D3D10_RESOURCE_MISC_SHARED_KEYEDMUTEX equ 0x10
D3D10_RESOURCE_MISC_GDI_COMPATIBLE equ 0x20

D3D10_MAP		typedef SDWORD
D3D10_MAP_READ		equ 1
D3D10_MAP_WRITE		equ 2
D3D10_MAP_READ_WRITE	equ 3
D3D10_MAP_WRITE_DISCARD equ 4
D3D10_MAP_WRITE_NO_OVERWRITE equ 5

D3D10_MAP_FLAG		typedef SDWORD
D3D10_MAP_FLAG_DO_NOT_WAIT equ 0x100000

D3D10_RAISE_FLAG	typedef SDWORD
D3D10_RAISE_FLAG_DRIVER_INTERNAL_ERROR equ 0x1

D3D10_CLEAR_FLAG	typedef SDWORD
D3D10_CLEAR_DEPTH	equ 0x1
D3D10_CLEAR_STENCIL	equ 0x2

D3D10_RECT		typedef RECT

D3D10_BOX		STRUC
left			UINT ?
top			UINT ?
front			UINT ?
right			UINT ?
bottom			UINT ?
back			UINT ?
D3D10_BOX		ENDS

ifndef __ID3D10DeviceChild_INTERFACE_DEFINED__
define __ID3D10DeviceChild_INTERFACE_DEFINED__

.comdef ID3D10DeviceChild : public IUnknown

    GetDevice		proc :ptr
    GetPrivateData	proc :REFGUID, :ptr, :ptr
    SetPrivateData	proc :REFGUID, :UINT, :ptr
    SetPrivateDataInterface proc :REFGUID, :ptr
   .ends

endif

D3D10_COMPARISON_FUNC	typedef SDWORD
D3D10_COMPARISON_NEVER	equ 1
D3D10_COMPARISON_LESS	equ 2
D3D10_COMPARISON_EQUAL	equ 3
D3D10_COMPARISON_LESS_EQUAL equ 4
D3D10_COMPARISON_GREATER equ 5
D3D10_COMPARISON_NOT_EQUAL equ 6
D3D10_COMPARISON_GREATER_EQUAL equ 7
D3D10_COMPARISON_ALWAYS equ 8

D3D10_DEPTH_WRITE_MASK	typedef SDWORD
D3D10_DEPTH_WRITE_MASK_ZERO equ 0
D3D10_DEPTH_WRITE_MASK_ALL equ 1

D3D10_STENCIL_OP	typedef SDWORD
D3D10_STENCIL_OP_KEEP	equ 1
D3D10_STENCIL_OP_ZERO	equ 2
D3D10_STENCIL_OP_REPLACE equ 3
D3D10_STENCIL_OP_INCR_SAT equ 4
D3D10_STENCIL_OP_DECR_SAT equ 5
D3D10_STENCIL_OP_INVERT equ 6
D3D10_STENCIL_OP_INCR	equ 7
D3D10_STENCIL_OP_DECR	equ 8

D3D10_DEPTH_STENCILOP_DESC STRUC
StencilFailOp		D3D10_STENCIL_OP ?
StencilDepthFailOp	D3D10_STENCIL_OP ?
StencilPassOp		D3D10_STENCIL_OP ?
StencilFunc		D3D10_COMPARISON_FUNC ?
D3D10_DEPTH_STENCILOP_DESC ENDS

D3D10_DEPTH_STENCIL_DESC STRUC
DepthEnable		BOOL ?
DepthWriteMask		D3D10_DEPTH_WRITE_MASK ?
DepthFunc		D3D10_COMPARISON_FUNC ?
StencilEnable		BOOL ?
StencilReadMask		UINT8 ?
StencilWriteMask	UINT8 ?
FrontFace		D3D10_DEPTH_STENCILOP_DESC <>
BackFace		D3D10_DEPTH_STENCILOP_DESC <>
D3D10_DEPTH_STENCIL_DESC ENDS

ifndef __ID3D10DepthStencilState_INTERFACE_DEFINED__
define __ID3D10DepthStencilState_INTERFACE_DEFINED__

.comdef ID3D10DepthStencilState : public ID3D10DeviceChild

    GetDesc		proc :ptr
   .ends

endif

D3D10_BLEND		typedef SDWORD
D3D10_BLEND_ZERO	equ 1
D3D10_BLEND_ONE		equ 2
D3D10_BLEND_SRC_COLOR	equ 3
D3D10_BLEND_INV_SRC_COLOR equ 4
D3D10_BLEND_SRC_ALPHA	equ 5
D3D10_BLEND_INV_SRC_ALPHA equ 6
D3D10_BLEND_DEST_ALPHA	equ 7
D3D10_BLEND_INV_DEST_ALPHA equ 8
D3D10_BLEND_DEST_COLOR	equ 9
D3D10_BLEND_INV_DEST_COLOR equ 10
D3D10_BLEND_SRC_ALPHA_SAT equ 11
D3D10_BLEND_BLEND_FACTOR equ 14
D3D10_BLEND_INV_BLEND_FACTOR equ 15
D3D10_BLEND_SRC1_COLOR	equ 16
D3D10_BLEND_INV_SRC1_COLOR equ 17
D3D10_BLEND_SRC1_ALPHA	equ 18
D3D10_BLEND_INV_SRC1_ALPHA equ 19

D3D10_BLEND_OP		typedef SDWORD
D3D10_BLEND_OP_ADD	equ 1
D3D10_BLEND_OP_SUBTRACT equ 2
D3D10_BLEND_OP_REV_SUBTRACT equ 3
D3D10_BLEND_OP_MIN	equ 4
D3D10_BLEND_OP_MAX	equ 5

D3D10_COLOR_WRITE_ENABLE typedef SDWORD
D3D10_COLOR_WRITE_ENABLE_RED equ 1
D3D10_COLOR_WRITE_ENABLE_GREEN equ 2
D3D10_COLOR_WRITE_ENABLE_BLUE equ 4
D3D10_COLOR_WRITE_ENABLE_ALPHA equ 8
D3D10_COLOR_WRITE_ENABLE_ALL equ ( ( ( D3D10_COLOR_WRITE_ENABLE_RED or D3D10_COLOR_WRITE_ENABLE_GREEN ) or D3D10_COLOR_WRITE_ENABLE_BLUE ) or D3D10_COLOR_WRITE_ENABLE_ALPHA )

D3D10_BLEND_DESC	STRUC
AlphaToCoverageEnable	BOOL ?
BlendEnable		BOOL 8 dup(?)
SrcBlend		D3D10_BLEND ?
DestBlend		D3D10_BLEND ?
BlendOp			D3D10_BLEND_OP ?
SrcBlendAlpha		D3D10_BLEND ?
DestBlendAlpha		D3D10_BLEND ?
BlendOpAlpha		D3D10_BLEND_OP ?
RenderTargetWriteMask	UINT8 8 dup(?)
D3D10_BLEND_DESC	ENDS

ifndef __ID3D10BlendState_INTERFACE_DEFINED__
define __ID3D10BlendState_INTERFACE_DEFINED__

.comdef ID3D10BlendState : public ID3D10DepthStencilState
    .ends

endif

D3D10_RASTERIZER_DESC	STRUC
FillMode		D3D10_FILL_MODE ?
CullMode		D3D10_CULL_MODE ?
FrontCounterClockwise	BOOL ?
DepthBias		SINT ?
DepthBiasClamp		FLOAT ?
SlopeScaledDepthBias	FLOAT ?
DepthClipEnable		BOOL ?
ScissorEnable		BOOL ?
MultisampleEnable	BOOL ?
AntialiasedLineEnable	BOOL ?
D3D10_RASTERIZER_DESC	ENDS

ifndef __ID3D10RasterizerState_INTERFACE_DEFINED__
define __ID3D10RasterizerState_INTERFACE_DEFINED__

.comdef ID3D10RasterizerState : public ID3D10DepthStencilState
   .ends

endif

D3D10_SUBRESOURCE_DATA	STRUC
pSysMem			PVOID ?
SysMemPitch		UINT ?
SysMemSlicePitch	UINT ?
D3D10_SUBRESOURCE_DATA	ENDS

ifndef __ID3D10Resource_INTERFACE_DEFINED__
define __ID3D10Resource_INTERFACE_DEFINED__

.comdef ID3D10Resource : public ID3D10DeviceChild

    GetType		proc :ptr
    SetEvictionPriority proc :UINT
    GetEvictionPriority proc
   .ends

endif

D3D10_BUFFER_DESC	STRUC
ByteWidth		UINT ?
Usage			D3D10_USAGE ?
BindFlags		UINT ?
CPUAccessFlags		UINT ?
MiscFlags		UINT ?
D3D10_BUFFER_DESC	ENDS

ifndef __ID3D10Buffer_INTERFACE_DEFINED__
define __ID3D10Buffer_INTERFACE_DEFINED__

.comdef ID3D10Buffer : public ID3D10Resource

    Map			proc :D3D10_MAP, :UINT, :ptr
    Unmap		proc
    GetDesc		proc :ptr
   .ends

endif

D3D10_TEXTURE1D_DESC	STRUC
Width			UINT ?
MipLevels		UINT ?
ArraySize		UINT ?
Format			DXGI_FORMAT ?
Usage			D3D10_USAGE ?
BindFlags		UINT ?
CPUAccessFlags		UINT ?
MiscFlags		UINT ?
D3D10_TEXTURE1D_DESC	ENDS

ifndef __ID3D10Texture1D_INTERFACE_DEFINED__
define __ID3D10Texture1D_INTERFACE_DEFINED__

.comdef ID3D10Texture1D : public ID3D10Resource

    Map			proc :UINT, :D3D10_MAP, :UINT, :ptr
    Unmap		proc :UINT
    GetDesc		proc :ptr
   .ends

endif

D3D10_TEXTURE2D_DESC	STRUC
Width			UINT ?
Height			UINT ?
MipLevels		UINT ?
ArraySize		UINT ?
Format			DXGI_FORMAT ?
SampleDesc		DXGI_SAMPLE_DESC <>
Usage			D3D10_USAGE ?
BindFlags		UINT ?
CPUAccessFlags		UINT ?
MiscFlags		UINT ?
D3D10_TEXTURE2D_DESC	ENDS

D3D10_MAPPED_TEXTURE2D	STRUC
pData			PVOID ?
RowPitch		UINT ?
D3D10_MAPPED_TEXTURE2D	ENDS

ifndef __ID3D10Texture2D_INTERFACE_DEFINED__
define __ID3D10Texture2D_INTERFACE_DEFINED__

.comdef ID3D10Texture2D : public ID3D10Texture1D
   .ends

endif

D3D10_TEXTURE3D_DESC	STRUC
Width			UINT ?
Height			UINT ?
Depth			UINT ?
MipLevels		UINT ?
Format			DXGI_FORMAT ?
Usage			D3D10_USAGE ?
BindFlags		UINT ?
CPUAccessFlags		UINT ?
MiscFlags		UINT ?
D3D10_TEXTURE3D_DESC	ENDS

D3D10_MAPPED_TEXTURE3D	STRUC
pData			PVOID ?
RowPitch		UINT ?
DepthPitch		UINT ?
D3D10_MAPPED_TEXTURE3D	ENDS

ifndef __ID3D10Texture3D_INTERFACE_DEFINED__
define __ID3D10Texture3D_INTERFACE_DEFINED__

.comdef ID3D10Texture3D : public ID3D10Texture1D
    .ends

endif

D3D10_TEXTURECUBE_FACE	typedef SDWORD
D3D10_TEXTURECUBE_FACE_POSITIVE_X equ 0
D3D10_TEXTURECUBE_FACE_NEGATIVE_X equ 1
D3D10_TEXTURECUBE_FACE_POSITIVE_Y equ 2
D3D10_TEXTURECUBE_FACE_NEGATIVE_Y equ 3
D3D10_TEXTURECUBE_FACE_POSITIVE_Z equ 4
D3D10_TEXTURECUBE_FACE_NEGATIVE_Z equ 5

ifndef __ID3D10View_INTERFACE_DEFINED__
define __ID3D10View_INTERFACE_DEFINED__

.comdef ID3D10View : public ID3D10DeviceChild

    GetResource		proc :ptr
   .ends

endif

D3D10_BUFFER_SRV	STRUC
UNION
 FirstElement		UINT ?
 ElementOffset		UINT ?
ENDS
UNION
 NumElements		UINT ?
 ElementWidth		UINT ?
ENDS
D3D10_BUFFER_SRV	ENDS

D3D10_TEX1D_SRV		STRUC
MostDetailedMip		UINT ?
MipLevels		UINT ?
D3D10_TEX1D_SRV		ENDS

D3D10_TEX1D_ARRAY_SRV	STRUC
MostDetailedMip		UINT ?
MipLevels		UINT ?
FirstArraySlice		UINT ?
ArraySize		UINT ?
D3D10_TEX1D_ARRAY_SRV	ENDS

D3D10_TEX2D_SRV		STRUC
MostDetailedMip		UINT ?
MipLevels		UINT ?
D3D10_TEX2D_SRV		ENDS

D3D10_TEX2D_ARRAY_SRV	STRUC
MostDetailedMip		UINT ?
MipLevels		UINT ?
FirstArraySlice		UINT ?
ArraySize		UINT ?
D3D10_TEX2D_ARRAY_SRV	ENDS

D3D10_TEX3D_SRV		STRUC
MostDetailedMip		UINT ?
MipLevels		UINT ?
D3D10_TEX3D_SRV		ENDS

D3D10_TEXCUBE_SRV	STRUC
MostDetailedMip		UINT ?
MipLevels		UINT ?
D3D10_TEXCUBE_SRV	ENDS

D3D10_TEX2DMS_SRV	STRUC
UnusedField_NothingToDefine UINT ?
D3D10_TEX2DMS_SRV	ENDS

D3D10_TEX2DMS_ARRAY_SRV STRUC
FirstArraySlice		UINT ?
ArraySize		UINT ?
D3D10_TEX2DMS_ARRAY_SRV ENDS

D3D10_SHADER_RESOURCE_VIEW_DESC STRUC
Format			DXGI_FORMAT ?
ViewDimension		D3D10_SRV_DIMENSION ?
UNION
 Buffer			D3D10_BUFFER_SRV <>
 Texture1D		D3D10_TEX1D_SRV <>
 Texture1DArray		D3D10_TEX1D_ARRAY_SRV <>
 Texture2D		D3D10_TEX2D_SRV <>
 Texture2DArray		D3D10_TEX2D_ARRAY_SRV <>
 Texture2DMS		D3D10_TEX2DMS_SRV <>
 Texture2DMSArray	D3D10_TEX2DMS_ARRAY_SRV <>
 Texture3D		D3D10_TEX3D_SRV <>
 TextureCube		D3D10_TEXCUBE_SRV <>
ENDS
D3D10_SHADER_RESOURCE_VIEW_DESC ENDS

ifndef __ID3D10ShaderResourceView_INTERFACE_DEFINED__
define __ID3D10ShaderResourceView_INTERFACE_DEFINED__

.comdef ID3D10ShaderResourceView : public ID3D10View

    GetDesc		proc :ptr
   .ends

endif

D3D10_BUFFER_RTV	STRUC
UNION
 FirstElement		UINT ?
 ElementOffset		UINT ?
ENDS
UNION
 NumElements		UINT ?
 ElementWidth		UINT ?
ENDS
D3D10_BUFFER_RTV	ENDS

D3D10_TEX1D_RTV		STRUC
MipSlice		UINT ?
D3D10_TEX1D_RTV		ENDS

D3D10_TEX1D_ARRAY_RTV	STRUC
MipSlice		UINT ?
FirstArraySlice		UINT ?
ArraySize		UINT ?
D3D10_TEX1D_ARRAY_RTV	ENDS

D3D10_TEX2D_RTV		STRUC
MipSlice		UINT ?
D3D10_TEX2D_RTV		ENDS

D3D10_TEX2DMS_RTV	STRUC
UnusedField_NothingToDefine UINT ?
D3D10_TEX2DMS_RTV	ENDS

D3D10_TEX2D_ARRAY_RTV	STRUC
MipSlice		UINT ?
FirstArraySlice		UINT ?
ArraySize		UINT ?
D3D10_TEX2D_ARRAY_RTV	ENDS

D3D10_TEX2DMS_ARRAY_RTV STRUC
FirstArraySlice		UINT ?
ArraySize		UINT ?
D3D10_TEX2DMS_ARRAY_RTV ENDS

D3D10_TEX3D_RTV		STRUC
MipSlice		UINT ?
FirstWSlice		UINT ?
WSize			UINT ?
D3D10_TEX3D_RTV		ENDS

D3D10_RENDER_TARGET_VIEW_DESC STRUC
Format			DXGI_FORMAT ?
ViewDimension		D3D10_RTV_DIMENSION ?
UNION
 Buffer			D3D10_BUFFER_RTV <>
 Texture1D		D3D10_TEX1D_RTV <>
 Texture1DArray		D3D10_TEX1D_ARRAY_RTV <>
 Texture2D		D3D10_TEX2D_RTV <>
 Texture2DArray		D3D10_TEX2D_ARRAY_RTV <>
 Texture2DMS		D3D10_TEX2DMS_RTV <>
 Texture2DMSArray	D3D10_TEX2DMS_ARRAY_RTV <>
 Texture3D		D3D10_TEX3D_RTV <>
ENDS
D3D10_RENDER_TARGET_VIEW_DESC ENDS

ifndef __ID3D10RenderTargetView_INTERFACE_DEFINED__
define __ID3D10RenderTargetView_INTERFACE_DEFINED__

.comdef ID3D10RenderTargetView : public ID3D10ShaderResourceView
    .ends
endif

D3D10_TEX1D_DSV		STRUC
MipSlice		UINT ?
D3D10_TEX1D_DSV		ENDS

D3D10_TEX1D_ARRAY_DSV	STRUC
MipSlice		UINT ?
FirstArraySlice		UINT ?
ArraySize		UINT ?
D3D10_TEX1D_ARRAY_DSV	ENDS

D3D10_TEX2D_DSV		STRUC
MipSlice		UINT ?
D3D10_TEX2D_DSV		ENDS

D3D10_TEX2D_ARRAY_DSV	STRUC
MipSlice		UINT ?
FirstArraySlice		UINT ?
ArraySize		UINT ?
D3D10_TEX2D_ARRAY_DSV	ENDS

D3D10_TEX2DMS_DSV	STRUC
UnusedField_NothingToDefine UINT ?
D3D10_TEX2DMS_DSV	ENDS

D3D10_TEX2DMS_ARRAY_DSV STRUC
FirstArraySlice		UINT ?
ArraySize		UINT ?
D3D10_TEX2DMS_ARRAY_DSV ENDS

D3D10_DEPTH_STENCIL_VIEW_DESC STRUC
Format			DXGI_FORMAT ?
ViewDimension		D3D10_DSV_DIMENSION ?
UNION
 Texture1D		D3D10_TEX1D_DSV <>
 Texture1DArray		D3D10_TEX1D_ARRAY_DSV <>
 Texture2D		D3D10_TEX2D_DSV <>
 Texture2DArray		D3D10_TEX2D_ARRAY_DSV <>
 Texture2DMS		D3D10_TEX2DMS_DSV <>
 Texture2DMSArray	D3D10_TEX2DMS_ARRAY_DSV <>
ENDS
D3D10_DEPTH_STENCIL_VIEW_DESC ENDS

ifndef __ID3D10DepthStencilView_INTERFACE_DEFINED__
define __ID3D10DepthStencilView_INTERFACE_DEFINED__

.comdef ID3D10DepthStencilView : public ID3D10ShaderResourceView
    .ends

endif

ifndef __ID3D10VertexShader_INTERFACE_DEFINED__
define __ID3D10VertexShader_INTERFACE_DEFINED__

.comdef ID3D10VertexShader : public ID3D10DeviceChild
   .ends

endif

ifndef __ID3D10GeometryShader_INTERFACE_DEFINED__
define __ID3D10GeometryShader_INTERFACE_DEFINED__

.comdef ID3D10GeometryShader : public ID3D10DeviceChild
   .ends

endif

ifndef __ID3D10PixelShader_INTERFACE_DEFINED__
define __ID3D10PixelShader_INTERFACE_DEFINED__

.comdef ID3D10PixelShader : public ID3D10DeviceChild
   .ends

endif

ifndef __ID3D10InputLayout_INTERFACE_DEFINED__
define __ID3D10InputLayout_INTERFACE_DEFINED__

.comdef ID3D10InputLayout : public ID3D10DeviceChild
   .ends

endif

D3D10_FILTER		typedef SDWORD
D3D10_FILTER_MIN_MAG_MIP_POINT equ 0
D3D10_FILTER_MIN_MAG_POINT_MIP_LINEAR equ 0x1
D3D10_FILTER_MIN_POINT_MAG_LINEAR_MIP_POINT equ 0x4
D3D10_FILTER_MIN_POINT_MAG_MIP_LINEAR equ 0x5
D3D10_FILTER_MIN_LINEAR_MAG_MIP_POINT equ 0x10
D3D10_FILTER_MIN_LINEAR_MAG_POINT_MIP_LINEAR equ 0x11
D3D10_FILTER_MIN_MAG_LINEAR_MIP_POINT equ 0x14
D3D10_FILTER_MIN_MAG_MIP_LINEAR equ 0x15
D3D10_FILTER_ANISOTROPIC equ 0x55
D3D10_FILTER_COMPARISON_MIN_MAG_MIP_POINT equ 0x80
D3D10_FILTER_COMPARISON_MIN_MAG_POINT_MIP_LINEAR equ 0x81
D3D10_FILTER_COMPARISON_MIN_POINT_MAG_LINEAR_MIP_POINT equ 0x84
D3D10_FILTER_COMPARISON_MIN_POINT_MAG_MIP_LINEAR equ 0x85
D3D10_FILTER_COMPARISON_MIN_LINEAR_MAG_MIP_POINT equ 0x90
D3D10_FILTER_COMPARISON_MIN_LINEAR_MAG_POINT_MIP_LINEAR equ 0x91
D3D10_FILTER_COMPARISON_MIN_MAG_LINEAR_MIP_POINT equ 0x94
D3D10_FILTER_COMPARISON_MIN_MAG_MIP_LINEAR equ 0x95
D3D10_FILTER_COMPARISON_ANISOTROPIC equ 0xd5
D3D10_FILTER_TEXT_1BIT	equ 0x80000000

D3D10_FILTER_TYPE	typedef SDWORD
D3D10_FILTER_TYPE_POINT equ 0
D3D10_FILTER_TYPE_LINEAR equ 1

D3D10_FILTER_TYPE_MASK	equ ( 0x3 )
D3D10_MIN_FILTER_SHIFT	equ ( 4 )
D3D10_MAG_FILTER_SHIFT	equ ( 2 )
D3D10_MIP_FILTER_SHIFT	equ ( 0 )
D3D10_COMPARISON_FILTERING_BIT equ ( 0x80 )
D3D10_ANISOTROPIC_FILTERING_BIT equ ( 0x40 )
D3D10_TEXT_1BIT_BIT	equ ( 0x80000000 )
D3D10_ENCODE_BASIC_FILTER macro min, mag, mip, bComparison
	exitm<>
	endm
D3D10_ENCODE_ANISOTROPIC_FILTER macro bComparison
	exitm<>
	endm
D3D10_DECODE_MIN_FILTER macro d3d10Filter
	exitm<>
	endm
D3D10_DECODE_MAG_FILTER macro d3d10Filter
	exitm<>
	endm
D3D10_DECODE_MIP_FILTER macro d3d10Filter
	exitm<>
	endm
D3D10_DECODE_IS_COMPARISON_FILTER macro d3d10Filter
	exitm<>
	endm
D3D10_DECODE_IS_ANISOTROPIC_FILTER macro d3d10Filter
	exitm<>
	endm
D3D10_DECODE_IS_TEXT_1BIT_FILTER macro d3d10Filter
	exitm<>
	endm
D3D10_TEXTURE_ADDRESS_MODE typedef SDWORD
D3D10_TEXTURE_ADDRESS_WRAP equ 1
D3D10_TEXTURE_ADDRESS_MIRROR equ 2
D3D10_TEXTURE_ADDRESS_CLAMP equ 3
D3D10_TEXTURE_ADDRESS_BORDER equ 4
D3D10_TEXTURE_ADDRESS_MIRROR_ONCE equ 5

D3D10_SAMPLER_DESC	STRUC
Filter			D3D10_FILTER ?
AddressU		D3D10_TEXTURE_ADDRESS_MODE ?
AddressV		D3D10_TEXTURE_ADDRESS_MODE ?
AddressW		D3D10_TEXTURE_ADDRESS_MODE ?
MipLODBias		FLOAT ?
MaxAnisotropy		UINT ?
ComparisonFunc		D3D10_COMPARISON_FUNC ?
BorderColor		FLOAT  4  dup(?)
MinLOD			FLOAT ?
MaxLOD			FLOAT ?
D3D10_SAMPLER_DESC	ENDS

ifndef __ID3D10SamplerState_INTERFACE_DEFINED__
define __ID3D10SamplerState_INTERFACE_DEFINED__

.comdef ID3D10SamplerState : public ID3D10DeviceChild

    GetDesc		proc :ptr
   .ends

endif

D3D10_FORMAT_SUPPORT	typedef SDWORD
D3D10_FORMAT_SUPPORT_BUFFER equ 0x1
D3D10_FORMAT_SUPPORT_IA_VERTEX_BUFFER equ 0x2
D3D10_FORMAT_SUPPORT_IA_INDEX_BUFFER equ 0x4
D3D10_FORMAT_SUPPORT_SO_BUFFER equ 0x8
D3D10_FORMAT_SUPPORT_TEXTURE1D equ 0x10
D3D10_FORMAT_SUPPORT_TEXTURE2D equ 0x20
D3D10_FORMAT_SUPPORT_TEXTURE3D equ 0x40
D3D10_FORMAT_SUPPORT_TEXTURECUBE equ 0x80
D3D10_FORMAT_SUPPORT_SHADER_LOAD equ 0x100
D3D10_FORMAT_SUPPORT_SHADER_SAMPLE equ 0x200
D3D10_FORMAT_SUPPORT_SHADER_SAMPLE_COMPARISON equ 0x400
D3D10_FORMAT_SUPPORT_SHADER_SAMPLE_MONO_TEXT equ 0x800
D3D10_FORMAT_SUPPORT_MIP equ 0x1000
D3D10_FORMAT_SUPPORT_MIP_AUTOGEN equ 0x2000
D3D10_FORMAT_SUPPORT_RENDER_TARGET equ 0x4000
D3D10_FORMAT_SUPPORT_BLENDABLE equ 0x8000
D3D10_FORMAT_SUPPORT_DEPTH_STENCIL equ 0x10000
D3D10_FORMAT_SUPPORT_CPU_LOCKABLE equ 0x20000
D3D10_FORMAT_SUPPORT_MULTISAMPLE_RESOLVE equ 0x40000
D3D10_FORMAT_SUPPORT_DISPLAY equ 0x80000
D3D10_FORMAT_SUPPORT_CAST_WITHIN_BIT_LAYOUT equ 0x100000
D3D10_FORMAT_SUPPORT_MULTISAMPLE_RENDERTARGET equ 0x200000
D3D10_FORMAT_SUPPORT_MULTISAMPLE_LOAD equ 0x400000
D3D10_FORMAT_SUPPORT_SHADER_GATHER equ 0x800000
D3D10_FORMAT_SUPPORT_BACK_BUFFER_CAST equ 0x1000000

ifndef __ID3D10Asynchronous_INTERFACE_DEFINED__
define __ID3D10Asynchronous_INTERFACE_DEFINED__

.comdef ID3D10Asynchronous : public ID3D10DeviceChild

    Begin		proc
    _End		proc
    GetData		proc
    GetDataSize		proc
   .ends

endif

D3D10_ASYNC_GETDATA_FLAG typedef SDWORD
D3D10_ASYNC_GETDATA_DONOTFLUSH equ 0x1

D3D10_QUERY		typedef SDWORD
D3D10_QUERY_EVENT	equ 0
D3D10_QUERY_OCCLUSION	equ ( D3D10_QUERY_EVENT + 1 )
D3D10_QUERY_TIMESTAMP	equ ( D3D10_QUERY_OCCLUSION + 1 )
D3D10_QUERY_TIMESTAMP_DISJOINT equ ( D3D10_QUERY_TIMESTAMP + 1 )
D3D10_QUERY_PIPELINE_STATISTICS equ ( D3D10_QUERY_TIMESTAMP_DISJOINT + 1 )
D3D10_QUERY_OCCLUSION_PREDICATE equ ( D3D10_QUERY_PIPELINE_STATISTICS + 1 )
D3D10_QUERY_SO_STATISTICS equ ( D3D10_QUERY_OCCLUSION_PREDICATE + 1 )
D3D10_QUERY_SO_OVERFLOW_PREDICATE equ ( D3D10_QUERY_SO_STATISTICS + 1 )

D3D10_QUERY_MISC_FLAG	typedef SDWORD
D3D10_QUERY_MISC_PREDICATEHINT equ 0x1

D3D10_QUERY_DESC	STRUC
Query			D3D10_QUERY ?
MiscFlags		UINT ?
D3D10_QUERY_DESC	ENDS

ifndef __ID3D10Query_INTERFACE_DEFINED__
define __ID3D10Query_INTERFACE_DEFINED__

.comdef ID3D10Query : public ID3D10Asynchronous

    GetDesc		proc :ptr
   .ends

endif

ifndef __ID3D10Predicate_INTERFACE_DEFINED__
define __ID3D10Predicate_INTERFACE_DEFINED__

.comdef ID3D10Predicate : public ID3D10Query
   .ends

endif

D3D10_QUERY_DATA_TIMESTAMP_DISJOINT STRUC
Frequency		UINT64 ?
Disjoint		BOOL ?
D3D10_QUERY_DATA_TIMESTAMP_DISJOINT ENDS

D3D10_QUERY_DATA_PIPELINE_STATISTICS STRUC
IAVertices		UINT64 ?
IAPrimitives		UINT64 ?
VSInvocations		UINT64 ?
GSInvocations		UINT64 ?
GSPrimitives		UINT64 ?
CInvocations		UINT64 ?
CPrimitives		UINT64 ?
PSInvocations		UINT64 ?
D3D10_QUERY_DATA_PIPELINE_STATISTICS ENDS

D3D10_QUERY_DATA_SO_STATISTICS STRUC
NumPrimitivesWritten	UINT64 ?
PrimitivesStorageNeeded UINT64 ?
D3D10_QUERY_DATA_SO_STATISTICS ENDS

D3D10_COUNTER		typedef SDWORD
D3D10_COUNTER_GPU_IDLE	equ 0
D3D10_COUNTER_VERTEX_PROCESSING equ ( D3D10_COUNTER_GPU_IDLE + 1 )
D3D10_COUNTER_GEOMETRY_PROCESSING equ ( D3D10_COUNTER_VERTEX_PROCESSING + 1 )
D3D10_COUNTER_PIXEL_PROCESSING equ ( D3D10_COUNTER_GEOMETRY_PROCESSING + 1 )
D3D10_COUNTER_OTHER_GPU_PROCESSING equ ( D3D10_COUNTER_PIXEL_PROCESSING + 1 )
D3D10_COUNTER_HOST_ADAPTER_BANDWIDTH_UTILIZATION equ ( D3D10_COUNTER_OTHER_GPU_PROCESSING + 1 )
D3D10_COUNTER_LOCAL_VIDMEM_BANDWIDTH_UTILIZATION equ ( D3D10_COUNTER_HOST_ADAPTER_BANDWIDTH_UTILIZATION + 1 )
D3D10_COUNTER_VERTEX_THROUGHPUT_UTILIZATION equ ( D3D10_COUNTER_LOCAL_VIDMEM_BANDWIDTH_UTILIZATION + 1 )
D3D10_COUNTER_TRIANGLE_SETUP_THROUGHPUT_UTILIZATION equ ( D3D10_COUNTER_VERTEX_THROUGHPUT_UTILIZATION + 1 )
D3D10_COUNTER_FILLRATE_THROUGHPUT_UTILIZATION equ ( D3D10_COUNTER_TRIANGLE_SETUP_THROUGHPUT_UTILIZATION + 1 )
D3D10_COUNTER_VS_MEMORY_LIMITED equ ( D3D10_COUNTER_FILLRATE_THROUGHPUT_UTILIZATION + 1 )
D3D10_COUNTER_VS_COMPUTATION_LIMITED equ ( D3D10_COUNTER_VS_MEMORY_LIMITED + 1 )
D3D10_COUNTER_GS_MEMORY_LIMITED equ ( D3D10_COUNTER_VS_COMPUTATION_LIMITED + 1 )
D3D10_COUNTER_GS_COMPUTATION_LIMITED equ ( D3D10_COUNTER_GS_MEMORY_LIMITED + 1 )
D3D10_COUNTER_PS_MEMORY_LIMITED equ ( D3D10_COUNTER_GS_COMPUTATION_LIMITED + 1 )
D3D10_COUNTER_PS_COMPUTATION_LIMITED equ ( D3D10_COUNTER_PS_MEMORY_LIMITED + 1 )
D3D10_COUNTER_POST_TRANSFORM_CACHE_HIT_RATE equ ( D3D10_COUNTER_PS_COMPUTATION_LIMITED + 1 )
D3D10_COUNTER_TEXTURE_CACHE_HIT_RATE equ ( D3D10_COUNTER_POST_TRANSFORM_CACHE_HIT_RATE + 1 )
D3D10_COUNTER_DEVICE_DEPENDENT_0 equ 0x40000000

D3D10_COUNTER_TYPE	typedef SDWORD
D3D10_COUNTER_TYPE_FLOAT32 equ 0
D3D10_COUNTER_TYPE_UINT16 equ ( D3D10_COUNTER_TYPE_FLOAT32 + 1 )
D3D10_COUNTER_TYPE_UINT32 equ ( D3D10_COUNTER_TYPE_UINT16 + 1 )
D3D10_COUNTER_TYPE_UINT64 equ ( D3D10_COUNTER_TYPE_UINT32 + 1 )

D3D10_COUNTER_DESC	STRUC
Counter			D3D10_COUNTER ?
MiscFlags		UINT ?
D3D10_COUNTER_DESC	ENDS

D3D10_COUNTER_INFO	STRUC
LastDeviceDependentCounter D3D10_COUNTER ?
NumSimultaneousCounters UINT ?
NumDetectableParallelUnits UINT8 ?
D3D10_COUNTER_INFO	ENDS

ifndef __ID3D10Counter_INTERFACE_DEFINED__
define __ID3D10Counter_INTERFACE_DEFINED__

.comdef ID3D10Counter : public ID3D10Asynchronous

    GetDesc		proc :ptr
   .ends

endif

ifndef __ID3D10Device_INTERFACE_DEFINED__
define __ID3D10Device_INTERFACE_DEFINED__

.comdef ID3D10Device : public IUnknown

    VSSetConstantBuffers proc :UINT, :UINT, :ptr
    PSSetShaderResources proc :UINT, :UINT, :ptr
    PSSetShader		proc :ptr
    PSSetSamplers	proc :UINT, :UINT, :ptr
    VSSetShader		proc :ptr
    DrawIndexed		proc :UINT, :UINT, :SINT
    Draw		proc :UINT, :UINT
    PSSetConstantBuffers proc :UINT, :UINT, :ptr
    IASetInputLayout	proc :ptr
    IASetVertexBuffers	proc :UINT, :UINT, :ptr, :ptr
    IASetIndexBuffer	proc :ptr, :DXGI_FORMAT, :UINT
    DrawIndexedInstanced proc :UINT, :UINT, :UINT, :SINT, :UINT
    DrawInstanced	proc :UINT, :UINT, :UINT, :UINT
    GSSetConstantBuffers proc :UINT, :UINT, :ptr
    GSSetShader		proc :ptr
    IASetPrimitiveTopology proc :D3D10_PRIMITIVE_TOPOLOGY
    VSSetShaderResources proc :UINT, :UINT, :ptr
    VSSetSamplers	proc :UINT, :UINT, :ptr
    SetPredication	proc :ptr, :BOOL
    GSSetShaderResources proc :UINT, :UINT, :ptr
    GSSetSamplers	proc :UINT, :UINT, :ptr
    OMSetRenderTargets	proc :UINT
    OMSetBlendState	proc :ptr, :ptr, :UINT
    OMSetDepthStencilState proc :ptr, :UINT
    SOSetTargets	proc :UINT, :ptr
    DrawAuto		proc
    RSSetState		proc :ptr
    RSSetViewports	proc :UINT, :ptr
    RSSetScissorRects	proc :UINT, :ptr
    CopySubresourceRegion proc :ptr, :UINT, :UINT, :UINT, :UINT, :ptr, :UINT, :ptr
    CopyResource	proc :ptr, :ptr
    UpdateSubresource	proc :ptr, :UINT, :ptr, :ptr, :UINT, :UINT
    ClearRenderTargetView proc :ptr, :ptr
    ClearDepthStencilView proc :ptr, :UINT, :FLOAT, :UINT8
    GenerateMips	proc :ptr
    ResolveSubresource	proc :ptr, :UINT, :ptr, :UINT, :DXGI_FORMAT
    VSGetConstantBuffers proc :UINT, :UINT, :ptr
    PSGetShaderResources proc :UINT, :UINT, :ptr
    PSGetShader		proc :ptr
    PSGetSamplers	proc :UINT, :UINT, :ptr
    VSGetShader		proc :ptr
    PSGetConstantBuffers proc :UINT, :UINT, :ptr
    IAGetInputLayout	proc :ptr
    IAGetVertexBuffers	proc :UINT, :UINT, :ptr, :ptr
    IAGetIndexBuffer	proc :ptr, :ptr, :ptr
    GSGetConstantBuffers proc :UINT, :UINT, :ptr
    GSGetShader		proc :ptr
    IAGetPrimitiveTopology proc :ptr
    VSGetShaderResources proc :UINT, :UINT, :ptr
    VSGetSamplers	proc :UINT, :UINT, :ptr
    GetPredication	proc :ptr, :ptr
    GSGetShaderResources proc :UINT, :UINT, :ptr
    GSGetSamplers	proc :UINT, :UINT, :ptr
    OMGetRenderTargets	proc :UINT
    OMGetBlendState	proc :ptr, :FLOAT, :ptr
    OMGetDepthStencilState proc :ptr, :ptr
    SOGetTargets	proc :UINT, :ptr
    RSGetState		proc :ptr
    RSGetViewports	proc :ptr, :ptr
    RSGetScissorRects	proc :ptr, :ptr
    GetDeviceRemovedReason proc
    SetExceptionMode	proc :UINT
    GetExceptionMode	proc
    GetPrivateData	proc :REFGUID, :ptr, :ptr
    SetPrivateData	proc :REFGUID, :UINT, :ptr
    SetPrivateDataInterface proc :REFGUID, :ptr
    ClearState		proc
    Flush		proc
    CreateBuffer	proc :ptr, :ptr, :ptr
    CreateTexture1D	proc :ptr
    CreateTexture2D	proc :ptr
    CreateTexture3D	proc :ptr
    CreateShaderResourceView proc :ptr, :ptr, :ptr
    CreateRenderTargetView proc :ptr, :ptr, :ptr
    CreateDepthStencilView proc :ptr, :ptr, :ptr
    CreateInputLayout	proc :UINT, :ptr, :size_t, :ptr
    CreateVertexShader	proc :ptr, :size_t, :ptr
    CreateGeometryShader proc :ptr, :size_t, :ptr
    CreateGeometryShaderWithStreamOutput proc :ptr, :size_t, :UINT, :UINT, :ptr
    CreatePixelShader	proc :ptr, :size_t, :ptr
    CreateBlendState	proc :ptr, :ptr
    CreateDepthStencilState proc :ptr, :ptr
    CreateRasterizerState proc :ptr, :ptr
    CreateSamplerState	proc :ptr, :ptr
    CreateQuery		proc :ptr, :ptr
    CreatePredicate	proc :ptr, :ptr
    CreateCounter	proc :ptr, :ptr
    CheckFormatSupport	proc :DXGI_FORMAT, :ptr
    CheckMultisampleQualityLevels proc :DXGI_FORMAT, :UINT, :ptr
    CheckCounterInfo	proc :ptr
    CheckCounter	proc :ptr, :ptr, :ptr, :LPSTR, :ptr
    GetCreationFlags	proc
    OpenSharedResource	proc :HANDLE, :REFIID, :ptr
    SetTextFilterSize	proc :UINT, :UINT
    GetTextFilterSize	proc :ptr, :ptr
   .ends

endif

ifndef __ID3D10Multithread_INTERFACE_DEFINED__
define __ID3D10Multithread_INTERFACE_DEFINED__

.comdef ID3D10Multithread : public IUnknown

    _Enter		proc
    _Leave		proc
    SetMultithreadProtected proc :BOOL
    GetMultithreadProtected proc
   .ends

endif

D3D10_CREATE_DEVICE_FLAG typedef SDWORD
D3D10_CREATE_DEVICE_SINGLETHREADED equ 0x1
D3D10_CREATE_DEVICE_DEBUG equ 0x2
D3D10_CREATE_DEVICE_SWITCH_TO_REF equ 0x4
D3D10_CREATE_DEVICE_PREVENT_INTERNAL_THREADING_OPTIMIZATIONS equ 0x8
D3D10_CREATE_DEVICE_ALLOW_NULL_FROM_MAP equ 0x10
D3D10_CREATE_DEVICE_BGRA_SUPPORT equ 0x20
D3D10_CREATE_DEVICE_STRICT_VALIDATION equ 0x200


D3D10_SDK_VERSION	equ ( 29 )

ifndef D3D10_IGNORE_SDK_LAYERS
include d3d10sdklayers.inc
endif
include d3d10misc.inc
include d3d10shader.inc
include d3d10effect.inc

DEFINE_GUID(IID_ID3D10DeviceChild,0x9B7E4C00,0x342C,0x4106,0xA1,0x9F,0x4F,0x27,0x04,0xF6,0x89,0xF0);
DEFINE_GUID(IID_ID3D10DepthStencilState,0x2B4B1CC8,0xA4AD,0x41f8,0x83,0x22,0xCA,0x86,0xFC,0x3E,0xC6,0x75);
DEFINE_GUID(IID_ID3D10BlendState,0xEDAD8D19,0x8A35,0x4d6d,0x85,0x66,0x2E,0xA2,0x76,0xCD,0xE1,0x61);
DEFINE_GUID(IID_ID3D10RasterizerState,0xA2A07292,0x89AF,0x4345,0xBE,0x2E,0xC5,0x3D,0x9F,0xBB,0x6E,0x9F);
DEFINE_GUID(IID_ID3D10Resource,0x9B7E4C01,0x342C,0x4106,0xA1,0x9F,0x4F,0x27,0x04,0xF6,0x89,0xF0);
DEFINE_GUID(IID_ID3D10Buffer,0x9B7E4C02,0x342C,0x4106,0xA1,0x9F,0x4F,0x27,0x04,0xF6,0x89,0xF0);
DEFINE_GUID(IID_ID3D10Texture1D,0x9B7E4C03,0x342C,0x4106,0xA1,0x9F,0x4F,0x27,0x04,0xF6,0x89,0xF0);
DEFINE_GUID(IID_ID3D10Texture2D,0x9B7E4C04,0x342C,0x4106,0xA1,0x9F,0x4F,0x27,0x04,0xF6,0x89,0xF0);
DEFINE_GUID(IID_ID3D10Texture3D,0x9B7E4C05,0x342C,0x4106,0xA1,0x9F,0x4F,0x27,0x04,0xF6,0x89,0xF0);
DEFINE_GUID(IID_ID3D10View,0xC902B03F,0x60A7,0x49BA,0x99,0x36,0x2A,0x3A,0xB3,0x7A,0x7E,0x33);
DEFINE_GUID(IID_ID3D10ShaderResourceView,0x9B7E4C07,0x342C,0x4106,0xA1,0x9F,0x4F,0x27,0x04,0xF6,0x89,0xF0);
DEFINE_GUID(IID_ID3D10RenderTargetView,0x9B7E4C08,0x342C,0x4106,0xA1,0x9F,0x4F,0x27,0x04,0xF6,0x89,0xF0);
DEFINE_GUID(IID_ID3D10DepthStencilView,0x9B7E4C09,0x342C,0x4106,0xA1,0x9F,0x4F,0x27,0x04,0xF6,0x89,0xF0);
DEFINE_GUID(IID_ID3D10VertexShader,0x9B7E4C0A,0x342C,0x4106,0xA1,0x9F,0x4F,0x27,0x04,0xF6,0x89,0xF0);
DEFINE_GUID(IID_ID3D10GeometryShader,0x6316BE88,0x54CD,0x4040,0xAB,0x44,0x20,0x46,0x1B,0xC8,0x1F,0x68);
DEFINE_GUID(IID_ID3D10PixelShader,0x4968B601,0x9D00,0x4cde,0x83,0x46,0x8E,0x7F,0x67,0x58,0x19,0xB6);
DEFINE_GUID(IID_ID3D10InputLayout,0x9B7E4C0B,0x342C,0x4106,0xA1,0x9F,0x4F,0x27,0x04,0xF6,0x89,0xF0);
DEFINE_GUID(IID_ID3D10SamplerState,0x9B7E4C0C,0x342C,0x4106,0xA1,0x9F,0x4F,0x27,0x04,0xF6,0x89,0xF0);
DEFINE_GUID(IID_ID3D10Asynchronous,0x9B7E4C0D,0x342C,0x4106,0xA1,0x9F,0x4F,0x27,0x04,0xF6,0x89,0xF0);
DEFINE_GUID(IID_ID3D10Query,0x9B7E4C0E,0x342C,0x4106,0xA1,0x9F,0x4F,0x27,0x04,0xF6,0x89,0xF0);
DEFINE_GUID(IID_ID3D10Predicate,0x9B7E4C10,0x342C,0x4106,0xA1,0x9F,0x4F,0x27,0x04,0xF6,0x89,0xF0);
DEFINE_GUID(IID_ID3D10Counter,0x9B7E4C11,0x342C,0x4106,0xA1,0x9F,0x4F,0x27,0x04,0xF6,0x89,0xF0);
DEFINE_GUID(IID_ID3D10Device,0x9B7E4C0F,0x342C,0x4106,0xA1,0x9F,0x4F,0x27,0x04,0xF6,0x89,0xF0);
DEFINE_GUID(IID_ID3D10Multithread,0x9B7E4E00,0x342C,0x4106,0xA1,0x9F,0x4F,0x27,0x04,0xF6,0x89,0xF0);

endif
.pragma list(pop)
